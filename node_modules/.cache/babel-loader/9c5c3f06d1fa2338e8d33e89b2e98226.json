{"ast":null,"code":"var _jsxFileName = \"/Users/anar/final-task-11/fullstack_part6/redux-anecdotes/src/components/Filter.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { applyFilter } from \"../reducers/filterReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = props => {\n  const handleChange = event => {\n    const filterInput = event.target.value;\n    props.applyFilter(filterInput);\n  };\n\n  const style = {\n    marginBottom: 10\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: [\"filter\", /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Filter;\nconst mapDispatchToProps = {\n  applyFilter\n};\nexport default connect(null, mapDispatchToProps)(Filter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/anar/final-task-11/fullstack_part6/redux-anecdotes/src/components/Filter.js"],"names":["React","connect","applyFilter","Filter","props","handleChange","event","filterInput","target","value","style","marginBottom","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACAL,IAAAA,KAAK,CAACF,WAAN,CAAkBK,WAAlB;AACH,GAHD;;AAIA,QAAMG,KAAK,GAAG;AACVC,IAAAA,YAAY,EAAE;AADJ,GAAd;AAIA,sBACI;AAAK,IAAA,KAAK,EAAED,KAAZ;AAAA,sCAEI;AAAO,MAAA,QAAQ,EAAEL;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAfD;;KAAMF,M;AAkBN,MAAMS,kBAAkB,GAAG;AACvBV,EAAAA;AADuB,CAA3B;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCT,MAAlC,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\";\nimport {applyFilter} from \"../reducers/filterReducer\";\n\nconst Filter = (props) => {\n    const handleChange = (event) => {\n        const filterInput = event.target.value;\n        props.applyFilter(filterInput)\n    }\n    const style = {\n        marginBottom: 10\n    }\n\n    return (\n        <div style={style}>\n            filter\n            <input onChange={handleChange}/>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = {\n    applyFilter\n}\n\nexport default connect(null, mapDispatchToProps)(Filter)"]},"metadata":{},"sourceType":"module"}