{"ast":null,"code":"let timer = null;\nexport const showNotification = (message, time) => {\n  if (timer != null) {\n    clearInterval();\n  }\n\n  return async dispatch => {\n    dispatch({\n      type: 'SHOW_NOTIFICATION',\n      data: message\n    });\n    setTimeout(() => {\n      dispatch(removeNotification());\n    }, time * 1000);\n  };\n};\nexport const removeNotification = () => ({\n  type: \"REMOVE_NOTIFICATION\"\n});\n\nconst notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"SHOW_NOTIFICATION\":\n      return action.data;\n\n    case \"REMOVE_NOTIFICATION\":\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;","map":{"version":3,"sources":["/Users/anar/final-task-11/fullstack_part6/redux-anecdotes/src/reducers/notificationReducer.js"],"names":["timer","showNotification","message","time","clearInterval","dispatch","type","data","setTimeout","removeNotification","notificationReducer","state","action"],"mappings":"AAAA,IAAIA,KAAK,GAAG,IAAZ;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AAC/C,MAAIH,KAAK,IAAI,IAAb,EAAmB;AACfI,IAAAA,aAAa;AAChB;;AACD,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,mBAAP;AAA4BC,MAAAA,IAAI,EAAEL;AAAlC,KAAD,CAAR;AACAM,IAAAA,UAAU,CAAC,MAAM;AACbH,MAAAA,QAAQ,CAACI,kBAAkB,EAAnB,CAAR;AACH,KAFS,EAEPN,IAAI,GAAG,IAFA,CAAV;AAGH,GALD;AAMH,CAVM;AAYP,OAAO,MAAMM,kBAAkB,GAAG,OAAO;AAACH,EAAAA,IAAI,EAAE;AAAP,CAAP,CAA3B;;AAEP,MAAMI,mBAAmB,GAAG,CAACC,KAAK,GAAG,IAAT,EAAeC,MAAf,KAA0B;AAClD,UAAQA,MAAM,CAACN,IAAf;AACI,SAAK,mBAAL;AACI,aAAOM,MAAM,CAACL,IAAd;;AACJ,SAAK,qBAAL;AACI,aAAO,IAAP;;AACJ;AACI,aAAOI,KAAP;AANR;AAQH,CATD;;AAWA,eAAeD,mBAAf","sourcesContent":["let timer = null\n\nexport const showNotification = (message, time) => {\n    if (timer != null) {\n        clearInterval()\n    }\n    return async dispatch => {\n        dispatch({type: 'SHOW_NOTIFICATION', data: message})\n        setTimeout(() => {\n            dispatch(removeNotification())\n        }, time * 1000)\n    }\n}\n\nexport const removeNotification = () => ({type: \"REMOVE_NOTIFICATION\"});\n\nconst notificationReducer = (state = null, action) => {\n    switch (action.type) {\n        case \"SHOW_NOTIFICATION\":\n            return action.data;\n        case \"REMOVE_NOTIFICATION\":\n            return null;\n        default:\n            return state;\n    }\n};\n\nexport default notificationReducer;"]},"metadata":{},"sourceType":"module"}