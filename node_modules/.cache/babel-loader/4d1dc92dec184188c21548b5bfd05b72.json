{"ast":null,"code":"import anecdoteService from '../services/anecdotes';\n\nconst reducer = (state = [], action) => {\n  console.log('state now: ', state);\n  console.log('action', action);\n\n  switch (action.type) {\n    case 'INIT_LIST':\n      return action.data;\n\n    case 'VOTE':\n      let anecdote = state.find(a => a.id === action.data.id);\n      anecdote.votes = anecdote.votes + 1;\n      return state.map(a => a.id === anecdote.id ? anecdote : a);\n\n    case 'NEW_ANECDOTE':\n      return [...state, action.data];\n\n    default:\n      return state;\n  }\n};\n\nexport const initializeAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch({\n      type: 'INIT_LIST',\n      data: anecdotes\n    });\n  };\n};\nexport const voteAnecdote = anecdote => {\n  return async dispatch => {\n    const updatedAnecdote = await anecdoteService.updateVote(anecdote.id, { ...anecdote,\n      votes: anecdote.votes + 1\n    });\n    dispatch({\n      type: 'VOTE',\n      data: updatedAnecdote\n    });\n  };\n};\nexport const creationAnecdote = anecdote => {\n  return async dispatch => {\n    const newAnecdote = await anecdoteService.createNew(anecdote);\n    dispatch({\n      type: 'NEW_ANECDOTE',\n      data: newAnecdote\n    });\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["/Users/anar/final-task-11/fullstack_part6/redux-anecdotes/src/reducers/anecdoteReducer.js"],"names":["anecdoteService","reducer","state","action","console","log","type","data","anecdote","find","a","id","votes","map","initializeAnecdotes","dispatch","anecdotes","getAll","voteAnecdote","updatedAnecdote","updateVote","creationAnecdote","newAnecdote","createNew"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAK,WAAL;AACI,aAAOH,MAAM,CAACI,IAAd;;AACJ,SAAK,MAAL;AACI,UAAIC,QAAQ,GAAGN,KAAK,CAACO,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASR,MAAM,CAACI,IAAP,CAAYI,EAArC,CAAf;AACAH,MAAAA,QAAQ,CAACI,KAAT,GAAiBJ,QAAQ,CAACI,KAAT,GAAiB,CAAlC;AACA,aAAOV,KAAK,CAACW,GAAN,CAAUH,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASH,QAAQ,CAACG,EAAlB,GAChBH,QADgB,GAEhBE,CAFC,CAAP;;AAGJ,SAAK,cAAL;AACI,aAAO,CACH,GAAGR,KADA,EAEHC,MAAM,CAACI,IAFJ,CAAP;;AAIJ;AACI,aAAOL,KAAP;AAfR;AAiBH,CApBD;;AAsBA,OAAO,MAAMY,mBAAmB,GAAG,MAAM;AACrC,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,SAAS,GAAG,MAAMhB,eAAe,CAACiB,MAAhB,EAAxB;AACAF,IAAAA,QAAQ,CAAC;AAACT,MAAAA,IAAI,EAAE,WAAP;AAAoBC,MAAAA,IAAI,EAAES;AAA1B,KAAD,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAME,YAAY,GAAIV,QAAD,IAAc;AACtC,SAAO,MAAMO,QAAN,IAAkB;AACrB,UAAMI,eAAe,GAAG,MAAMnB,eAAe,CAACoB,UAAhB,CAA2BZ,QAAQ,CAACG,EAApC,EAAwC,EAClE,GAAGH,QAD+D;AAElEI,MAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,GAAiB;AAF0C,KAAxC,CAA9B;AAIAG,IAAAA,QAAQ,CAAC;AAACT,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,IAAI,EAAEY;AAArB,KAAD,CAAR;AACH,GAND;AAOH,CARM;AAUP,OAAO,MAAME,gBAAgB,GAAGb,QAAQ,IAAI;AACxC,SAAO,MAAMO,QAAN,IAAkB;AACrB,UAAMO,WAAW,GAAG,MAAMtB,eAAe,CAACuB,SAAhB,CAA0Bf,QAA1B,CAA1B;AACAO,IAAAA,QAAQ,CAAC;AAACT,MAAAA,IAAI,EAAE,cAAP;AAAuBC,MAAAA,IAAI,EAAEe;AAA7B,KAAD,CAAR;AACH,GAHD;AAIH,CALM;AAOP,eAAerB,OAAf","sourcesContent":["import anecdoteService from '../services/anecdotes'\n\nconst reducer = (state = [], action) => {\n    console.log('state now: ', state)\n    console.log('action', action)\n    switch (action.type) {\n        case 'INIT_LIST':\n            return action.data;\n        case 'VOTE':\n            let anecdote = state.find(a => a.id === action.data.id)\n            anecdote.votes = anecdote.votes + 1\n            return state.map(a => a.id === anecdote.id\n                ? anecdote\n                : a)\n        case 'NEW_ANECDOTE':\n            return [\n                ...state,\n                action.data\n            ];\n        default:\n            return state;\n    }\n}\n\nexport const initializeAnecdotes = () => {\n    return async dispatch => {\n        const anecdotes = await anecdoteService.getAll()\n        dispatch({type: 'INIT_LIST', data: anecdotes})\n    }\n}\n\nexport const voteAnecdote = (anecdote) => {\n    return async dispatch => {\n        const updatedAnecdote = await anecdoteService.updateVote(anecdote.id, {\n            ...anecdote,\n            votes: anecdote.votes + 1\n        })\n        dispatch({type: 'VOTE', data: updatedAnecdote})\n    }\n}\n\nexport const creationAnecdote = anecdote => {\n    return async dispatch => {\n        const newAnecdote = await anecdoteService.createNew(anecdote)\n        dispatch({type: 'NEW_ANECDOTE', data: newAnecdote})\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}